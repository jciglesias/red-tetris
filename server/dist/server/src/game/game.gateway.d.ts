import { OnGatewayConnection, OnGatewayDisconnect } from '@nestjs/websockets';
import { Server, Socket } from 'socket.io';
import type { JoinRoomPayload, MovePayload, RotatePayload } from '@red-tetris/shared';
import { GameService } from './game.service';
import { RoomService } from './room.service';
import { PlayerService } from './player.service';
import { PieceService } from './piece.service';
export declare class GameGateway implements OnGatewayConnection, OnGatewayDisconnect {
    private gameService;
    private roomService;
    private playerService;
    private pieceService;
    server: Server;
    private readonly logger;
    private clientRooms;
    private clientPlayers;
    constructor(gameService: GameService, roomService: RoomService, playerService: PlayerService, pieceService: PieceService);
    handleConnection(client: Socket): void;
    handleDisconnect(client: Socket): void;
    handleJoinRoom(client: Socket, payload: JoinRoomPayload): Promise<void>;
    handleLeaveRoom(client: Socket): void;
    handleStartGame(client: Socket): void;
    handleMovePiece(client: Socket, payload: MovePayload): void;
    handleRotatePiece(client: Socket, payload: RotatePayload): void;
    handleHardDrop(client: Socket): void;
    private validateGameAction;
    private getRoomAndPlayer;
    private placePiece;
    private checkGameEnd;
    private handlePlayerLeaveRoom;
    private emitPlayerUpdate;
    private emitError;
}
